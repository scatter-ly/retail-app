name: Build Retail App Container
on:
  release:
    types: [created]
  workflow_dispatch:

env:
  NODE_VERSION: 16.x
  NODE_OPTIONS: --max-old-space-size=4096
  PROJECT_ID: vpc-host-nonprod-345521
  GAR_LOCATION: us
  REPOSITORY: np-docker
  SERVICE: retail-app
  REGION: us-central1

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Cache every node_modules folder inside the monorepo
      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          # We use both yarn.lock and package.json as cache keys to ensure that
          # changes to local monorepo packages bust the cache.
          key: ${{ runner.os }}-v${{ env.NODE_VERSION }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}

      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: cache global yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      # End of yarn setup
    
      - name: yarn build
        run: yarn build

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.SCATTERLY_SA_PRODUCT_DEVELOPMENT_326216 }}

      # Authenticate Docker using staging credentials to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth-dev
        uses: 'docker/login-action@v2'
        with:
          username: _json_key
          password: ${{ secrets.SCATTERLY_SA_PRODUCT_DEVELOPMENT_326216 }}
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker compose build 
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest"

      - id: create-latest-container-yaml
        name: Create latest container YAML
        uses: opencontextinc/create-artifact-yaml@v1
        with:
          type: container
          url: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest

      - uses: actions/upload-artifact@v3.1.0
        with:
          name: latest-container-yaml
          path: ${{ steps.create-latest-container-yaml.outputs.filename }}

      - name: Tag & Push versioned Container on release
        if: ${{ github.event_name == 'release' }}
        run: |-
          docker tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${GITHUB_REF_NAME}"
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.ref_name }}"

      - id: create-versioned-container-yaml
        name: Create versioned container YAML
        if: ${{ github.event_name == 'release' }}
        uses: opencontextinc/create-artifact-yaml@v1
        with:
          type: container
          url: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.ref_name }}

      - uses: actions/upload-artifact@v3.1.0
        if: ${{ github.event_name == 'release' }}
        with:
          name: versioned-container-yaml
          path: ${{ steps.create-versioned-container-yaml.outputs.filename }}
